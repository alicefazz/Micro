1. Dada uma variável 'a' do tipo 'char' (um byte), escreva os trechos de código em C para:
	(a) Somente setar o bit menos significativo de 'a'.
         a |= BIT0; 
  
	(b) Somente setar dois bits de 'a': o menos significativo e o segundo menos significativo.
         a |= BIT1 + BIT0; 

  
	(c) Somente zerar o terceiro bit menos significativo de 'a'.
         a &= ~(BIT2)
  
	(d) Somente zerar o terceiro e o quarto bits menos significativo de 'a'.
        a &= ~(BIT2) & ~(BIT3)
  
	(e) Somente inverter o bit mais significativo de 'a'.
  
        a ^= BIT7; 
         
	(f) Inverter o nibble mais significativo de 'a', e setar o nibble menos significativo de 'a'. 
         a ^= BIT7 + BIT6 + BIT5 + BIT4;
  
  2. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.
  
  #define tempo 0
  
  int main(void)
  {
  WDTCTL= WDTPW + WTDHOLD;
  P1DIR= 0X41;
  P1OUT=0x41;
  for(;;)
  {
  for(tempo=0;tempo<10000;tempo++);
  P1OUT=1;
  for(tempo=0;tempo<10000;tempo++);
  P1OUT=0;
  }
  }
  
  
  3. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o botão.

#include <msp430g2553.h> 
#define BTN BIT2 
#define LED1 BIT0 
#define LED2 BIT6 

void main (void) 
{ 
WDTCTL = WDTPW | WDTHOLD; 
PIOUT = 0; 
PIDIR = LED1 + LED2; 
for(;;) 
{ 
if(PIIN & BTN == 0) 
{ 
PIOUT |= LED1 + LED2; 
PIOUT &= ~(LED1 + LED2); 
PIOUT |= LED1 + LED2; 
PIOUT &= ~(LED1 + LED2); 
} 
else 
PIOUT = 0; 

} 
} 


4. Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

#define LED1 BIT0
#define LED2 BIT6
#define BTN BIT3

{
WDTCTL=WDTPW+WDTHOLD;
P1DIR |= BIT0+BIT6;     //P1.0  e P1.6 como saída e os demais como entradas
P1OUT &= ~(BIT0+BIT6);   //P1.0 e P1.6 como desligado
P1REN |= BIT3;     //Habilita Pull-up no botão P1.3

while(1)      //loop infinito
{
if((P1IN & BIT3)==0)   // Se o botão está em zero
P1OUT=BIT0+BIT6;            // acende os dois leds, P1.0 e P1.6
else 
P1OUT &= ~(BIT0+BIT6);        // Apaga os dois leds
}


5. Reescreva o código da questão 2 usando a função da questão 4.

 #define tempo 0
 #define LED1 BIT0
 #define LED2 BIT6
 #define BTN BIT3
  
  int main(void)
  {
  WDTCTL= WDTPW + WTDHOLD;
  P1DIR= BIT0+BIT6;
  P1OUT=BIT0+BIT6;
  
  while((P1IN & BIT3)==1)
  {
  for(tempo=0;tempo<10000;tempo++);
  	P1OUT=1;
  for(tempo=0;tempo<10000;tempo++);
  	P1OUT=0;
  }
  }

6. Reescreva o código da questão 3 usando a função da questão 4.
#include <msp430g2553.h> 
#define BTN BIT2 
#define LED1 BIT0 
#define LED2 BIT6 

void Acende_led() 
{ 
PIDIR = LED1 + LED2; 
PIOUT |= LED1 + LED2; 

} 

void main (void) 
{ 
WDTCTL = WDTPW | WDTHOLD; 
PIOUT = 0; 
PIDIR = LED1 + LED2; 
for(;;) 
{ 
if(PIIN & BTN == 0) 
{ 
Acende_led(); 
PIOUT &= ~(LED1 + LED2); 
Acende_led(); 
PIOUT &= ~(LED1 + LED2); 
} 
else 
PIOUT = 0; 

} 
}
